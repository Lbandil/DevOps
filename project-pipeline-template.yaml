---
parameters:
  - name: projectPath
    default: .
    type: string
  - name: folderName
    default: Default
    type: string
  - name: versioningStrategy
    default: CurrentVersion
    type: string
  - name: environments
    default: ""
    type: string
  - name: testSet
    default: DevOpsProject_Tests
    type: string
stages:
  - stage: Build
    jobs:
      - job: BuildJob
        pool: Default
        workspace:
          clean: all
        steps:
          - script: "echo project path: ${{ parameters.projectPath }}, folder name: ${{
              parameters.folderName }}, versioning strategy: ${{
              parameters.versioningStrategy }}, environments: ${{
              parameters.environments }}"
            displayName: Log parameters
          - task: UiPathInstallPlatform@2
          - task: UiPathPack@2
            inputs:
              versionType: ${{ parameters.versioningStrategy }}
              projectJsonPath: $(Build.SourcesDirectory)\${{ parameters.projectPath }}
              orchestratorConnection: UiPath2
              outputPath: $(Build.ArtifactStagingDirectory)\Output
          - publish: $(Build.ArtifactStagingDirectory)\Output
            artifact: drop
  - stage: DeployToTest
    condition: and(succeeded('Build'),
      startsWith(variables['Build.SourceBranchName'], 'development'))
    jobs:
      - job: DeployToTestJob
        pool: Default
        workspace:
          clean: all
        steps:
          - download: current
            artifact: drop
          - task: UiPathInstallPlatform@2
          - task: UiPathDeploy@2
            inputs:
              orchestratorConnection: UiPath2
              packagesPath: $(Pipeline.Workspace)\drop
              folderName: ${{ parameters.folderName }}
              environments: ${{ parameters.environments }}
  - stage: Assest
    displayName: Create Assests
    jobs:
      - job: CreateAssests
        pool: Default
        steps:
          - task: UiPathAssets@2
            inputs:
              orchestratorConnection: UiPath2
              folderName: ${{ parameters.folderName }}
              assetActionType: Deploy
              csvFile: $(Build.SourcesDirectory)\Data\Assests.CSV
  - stage: Testing
    displayName: Test After Publish
    dependsOn: DeployToTest
    condition: succeeded()
    jobs:
      - job: TestDEV
        pool: Default
        steps:
          - task: UiPathTest@2
            inputs:
              testTarget: TestSet
              orchestratorConnection: UiPath2
              testSet: ${{ parameters.testSet }}
              folderName: ${{ parameters.folderName }}
              testReportDestination: $(Pipeline.Workspace)\drop\
  - stage: DeployToProd
    condition: and(succeeded('Build'), eq(variables['Build.SourceBranchName'], 'main'))
    jobs:
      - deployment: DeployToProdJob
        pool:
          vmImage: windows-latest
        workspace:
          clean: all
        environment: Production
        strategy:
          runOnce:
            deploy:
              steps:
                - download: current
                  artifact: drop
                - task: UiPathInstallPlatform@2
                - task: UiPathDeploy@2
                  inputs:
                    orchestratorConnection: UiPath2
                    packagesPath: $(Pipeline.Workspace)\drop
                    folderName: ${{ parameters.folderName }}
                    environments: ${{ parameters.environments }}
